#!/usr/bin/env bash

function print_usage {
    echo "Usage: $0 <args>"
    echo "args:"
    echo "  --host:     the hostname (default to localhost)"
    echo "  -h|--help:  prints this help message"
}

host="localhost"

TEMP=`getopt -o h --long host:,help \
     -n $0 -- "$@"`

if [ $? != 0 ] ; then print_usage ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
    case "$1" in
        --host) host="$2"; shift 2;;
        -h|--help) print_usage; exit 1; shift 2;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# echo "getting stats for $host"

output=`curl "http://$host/server-status?auto" 2> /dev/null`
if [ $? -ne 0 ]; then
    echo "Critical: apache isn't running"
    exit 2
fi

if echo "$output" | grep '<html>' >/dev/null 2>&1 ; then
    echo "Unknown: apache didn't return expected format"
    exit 3
fi

if [ "x$output" == "x" ]; then
    echo "Unknown: apache didn't return any information"
    exit 3
fi

output=`echo "$output" | head -n-1 | tr -d ' ' | tr 'A-Z:\n' 'a-z= '`
echo -n "Ok: apache is running|$output"
