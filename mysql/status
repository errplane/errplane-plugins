#!/usr/bin/env bash

function print_usage {
    echo "Usage: $0 <args>"
    echo "args:"
    echo "  -H|--host: The hostname to use when connecting to mysql"
    echo "  -P|--port: The port to use when connecting to mysql"
    echo "  -u|--user: The username to use when connecting to mysql"
    echo "  -p|--password: The password to use when connecting to mysql"
    echo "  -h|--help: print this help"
}

mysql_args=""

TEMP=`getopt -o u:p:H:P:h --long user:,password:,port:,host:,help \
     -n $0 -- "$@"`

if [ $? != 0 ] ; then print_usage ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
    case "$1" in
        -u|--user) mysql_args="$mysql_args -u $2" ; shift 2;;
        -p|--password) mysql_args="$mysql_args -p $2"; shift 2;;
        -H|--host) mysql_args="$mysql_args -h $2"; shift 2;;
        -P|--port) mysql_args="$mysql_args -P $2"; shift 2;;
        -p|--password) mysql_args="$mysql_args -p $2"; shift 2;;
        -h|--help) print_usage; exit 1; shift 2;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# echo "using args: $mysql_args"

# remove the top line, lower case everything, translate tabs and spaces to '=' and newlines to spaces.
output=`echo 'show global status where value <> "0" and value <> ""' | mysql $mysql_args | tail -n+2 | tr 'A-Z\t \n' 'a-z== '`
if [ $? -ne 0 ]; then
    echo "Critical: mysql isn't running"
    exit 2
fi

if [ "x$output" == "x" ]; then
    echo "Unknown: mysql didn't print any information"
    exit 3
fi

echo -n "Ok: mysql is running|$output"


